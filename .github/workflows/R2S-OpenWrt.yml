name: R2S-OpenWrt

on:
  push:
    branches: 
      - master
    paths:
      - '.github/workflows/R2S-OpenWrt.yml'
      - 'SEED/R2S/config.seed'
      - 'SCRIPTS/switch'
      - 'SCRIPTS/R2S/02_prepare_package.sh'
 # watch:
 #   types: [started]

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    
    steps:
    - name: Clone Repository
      uses: actions/checkout@main
    - name: Show CPU Model and Free Space
      run: |
        echo -e "Total CPU cores\t: $(nproc)"
        cat /proc/cpuinfo | grep 'model name'
        free -h
    - name: Free disk space
      run: |
        sudo -E swapoff -a
        sudo -E rm -f /swapfile
        sudo -E docker image prune -a -f
        sudo -E snap set system refresh.retain=2
        sudo -E apt-get -y purge azure* dotnet* firefox ghc* google* hhvm llvm* mono* mysql* openjdk* php* zulu*
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo -E rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /etc/mysql /etc/php /usr/local/share/boost
        [ -n "$AGENT_TOOLSDIRECTORY" ] && sudo rm -rf "$AGENT_TOOLSDIRECTORY"
    - name: Init build dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E rm -rf /etc/apt/sources.list.d
        sudo -E apt-get update -y
        sudo -E apt-get install -y build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python3 python3-pip python3-ply haveged lrzsz device-tree-compiler scons
        wget -qO - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | sed 's/python-/python3-/g' | /bin/bash
        sudo -E apt-get clean -y
        git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        df -h
    - name: Cleanup Old Action Artifacts
      uses: kolpav/purge-artifacts-action@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        expire-in: 14d # Source:https://github.com/kolpav/purge-artifacts-action
    - name: Cleanup Workflow Runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 21
        #keep_minimum_runs: 6
    - name: Prepare Mixedwrt
      run: |
        sudo chown -R runner:runner /home/runner/work/R2S-OpenWrt
        cp -r ./SCRIPTS/R2S/. ./SCRIPTS/
        cp -r ./SCRIPTS/. ./
        /bin/bash 01_get_ready.sh
    - name: Prepare Package
      run: |
        cd openwrt
        cp -r ../SCRIPTS/. ./
        /bin/bash 02_prepare_package.sh
    - name: Convert Translation
      run: |
        cd openwrt
        /bin/bash 03_convert_translation.sh
    - name: Remove Upx
      run: |
        cd openwrt
        /bin/bash 04_remove_upx.sh
    - name: Add ACL
      run: |
        cd openwrt
        /bin/bash 05_create_acl_for_luci.sh -a
    - name: Make Config
      run: |
        cd openwrt
        mv ../SEED/R2S/config.seed .config
        make defconfig
    - name: Smart chmod
      run: |
        MY_Filter=$(mktemp)
        echo '/\.git' >  ${MY_Filter}
        echo '/\.svn' >> ${MY_Filter}
        find ./ -maxdepth 1 | grep -v '\./$' | grep -v '/\.git' | xargs -s1024 chmod -R u=rwX,og=rX
        find ./ -type f | grep -v -f ${MY_Filter} | xargs -s1024 file | grep 'executable\|ELF' | cut -d ':' -f1 | xargs -s1024 chmod 755
        rm -f ${MY_Filter}
        unset MY_Filter
    - name: Make Download
      run: |
        df -h
        cd openwrt
        make download -j10
    - name: Make Toolchain
      run: |
        df -h
        cd openwrt
        let make_process=$(nproc)+1
        make toolchain/install -j${make_process} V=s
    - name: Compile Openwrt
      run: |
        df -h
        cd openwrt
        let make_process=$(nproc)+1
        make -j${make_process} V=s || make -j${make_process} V=s || make -j1 V=s
    - name: Cleaning
      run: |
        df -h
        cd openwrt/bin/targets/rockchip/armv8
        /bin/bash ../../../../../SCRIPTS/06_cleaning.sh
    - name: Print Disk Space After
      run: df -h
    - name: Upload Firmwares
      uses: actions/upload-artifact@main
      with:
        name: R2S-OpenWrt
        path: openwrt/bin/targets/rockchip/armv8/
